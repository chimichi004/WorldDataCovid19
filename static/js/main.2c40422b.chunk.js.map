{"version":3,"sources":["components/table-list/table-list.component.jsx","components/table-container/table-container.component.jsx","components/continent-buttons/continent-buttons.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["columns","id","label","minWidth","useStyles","makeStyles","root","width","container","maxHeight","CovidTable","covidStatusData","classes","React","useState","page","setPage","rowsPerPage","setRowsPerPage","rows","map","e","no","obj","countryInfo","_id","cntry","country","ttl_css","cases","nw_css","todayCases","ttl_dth","deaths","ttl_rcvr","recovered","nw_rcvr","todayRecovered","actv_css","active","srs_crtl","critical","tot_css","casesPerOneMillion","dth_css","deathsPerOneMillion","ttl_tsts","tests","Paper","className","Table","stickyHeader","TableHead","TableRow","column","TableCell","align","style","TableBody","slice","row","hover","role","tabIndex","value","format","code","TablePagination","rowsPerPageOptions","component","count","length","onPageChange","event","newPage","onRowsPerPageChange","target","padding","TableContainer","covidStatus","Container","maxWidth","theme","margin","spacing","ContinentButtons","changeContinent","Button","onClick","requestOptions","method","headers","App","props","fetchAllCountries","fetch","then","response","json","data","setState","covidstatus","console","log","searchField","filterData","continent","state","filter","x","this","covidData","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c40422b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\n//Copied and modified from material-ui docs\r\nconst columns = [\r\n  { id: 'no', label: '#', minWidth: 80 },\r\n  { id: 'cntry', label: 'Country, Other', minWidth: 200 },\r\n  { id: 'ttl_css', label: 'Total Cases', minWidth: 200 },\r\n  { id: 'nw_css', label: 'New Cases', minWidth: 200 },\r\n  { id: 'ttl_dth', label: 'Total Deaths', minWidth: 200 },\r\n  { id: 'ttl_rcvr', label: 'Total Recover', minWidth: 200 },\r\n  { id: 'nw_rcvr', label: 'New Recover', minWidth: 200 },\r\n  { id: 'actv_css', label: 'Active Cases', minWidth: 200 },\r\n  { id: 'srs_crtl', label: 'Serious, Critical', minWidth: 200 },\r\n  { id: 'tot_css', label: 'Tot Cases/ 1M Pop', minWidth: 200 },\r\n  { id: 'dth_css', label: 'Deaths/ 1M Pop', minWidth: 200 },\r\n  { id: 'ttl_tsts', label: 'Total Tests', minWidth: 200 },\r\n];\r\n\r\n//Copied and modified from material-ui docs\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n});\r\n\r\n\r\nexport const CovidTable = ({covidStatusData}) => {\r\n//Copied and modified from material-ui docs\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  //Copied and modified from material-ui docs\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  //Copied and modified from material-ui docs\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n let createData = (obj) => {\r\n    return {\r\n        no : obj.countryInfo._id,\r\n        cntry : obj.country, \r\n        ttl_css : obj.cases, \r\n        nw_css : obj.todayCases, \r\n        ttl_dth : obj.deaths, \r\n        ttl_rcvr : obj.recovered, \r\n        nw_rcvr : obj.todayRecovered, \r\n        actv_css : obj.active, \r\n        srs_crtl : obj.critical, \r\n        tot_css : obj.casesPerOneMillion, \r\n        dth_css : obj.deathsPerOneMillion, \r\n        ttl_tsts : obj.tests\r\n    }\r\n  }\r\n\r\n  let rows =  covidStatusData.map(e => {  \r\n      return createData(e);\r\n    });\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n              return (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                  {columns.map((column) => {\r\n                    const value = row[column.id];\r\n                    return (\r\n                      <TableCell key={column.id} align={column.align}>\r\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { CovidTable } from '../table-list/table-list.component';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    padding: '30px',\r\n  },\r\n});\r\n\r\n\r\nexport const TableContainer = ({covidStatus}) => {\r\n    const classes = useStyles();\r\n  return (\r\n    <Container maxWidth=\"lg\" className={classes.root}>\r\n        <CovidTable covidStatusData={covidStatus}/>\r\n    </Container>\r\n  )\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nexport const ContinentButtons = ({changeContinent}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Button onClick={() => changeContinent(\"All\")}>All</Button>\r\n      <Button onClick={() => changeContinent(\"Europe\")}>Europe</Button>\r\n      <Button onClick={() => changeContinent(\"North America\")}>North America</Button>\r\n      <Button onClick={() => changeContinent(\"Asia\")}>Asia</Button>\r\n      <Button onClick={() => changeContinent(\"South America\")}>South America</Button>\r\n      <Button onClick={() => changeContinent(\"Africa\")}>Africa</Button>\r\n      <Button onClick={() => changeContinent(\"Oceania\")}>Oceania</Button>\r\n    </div>\r\n  );\r\n}\r\n","\nimport './App.css';\nimport React, { Component } from 'react'\nimport { TableContainer } from './components/table-container/table-container.component';\nimport { ContinentButtons } from './components/continent-buttons/continent-buttons.component';\n\nconst requestOptions = {\n  method: 'GET',\n  headers: { \n    'Content-Type': 'application/json',\n    'User-Agent': 'PostmanRuntime/7.28.4',\n    'Accept': '*/*',\n    'Accept-Encoding': 'gzip, deflate, br',\n    'Connection': 'keep-alive',\n   }\n};\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      covidstatus: [],\n      searchField: 'All'\n    };\n  }\n\n  componentDidMount(){ \n    this.fetchAllCountries();  \n  }\n\n  fetchAllCountries = () => {\n    fetch('https://corona.lmao.ninja/v2/countries?yesterday=&sort=', requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          this.setState({ covidstatus: data})\n          console.log(data);\n        });\n  }\n\n  changeContinent = (e) => {\n    this.setState({ searchField: e});\n  }\n  filterData = () => {\n    let continent = this.state.searchField;\n    //this.fetchAllCountries();\n    return this.state.covidstatus.filter(x => x.continent === continent);\n  }\n\n  render(){\n    let {covidstatus, searchField} = this.state;\n    let covidData = searchField === \"All\" ? covidstatus : this.filterData();\n    return (\n      <div className=\"App\">\n        <h1>Covid-19 Status Worldwide</h1>\n        <ContinentButtons changeContinent={this.changeContinent}/>\n        <TableContainer covidStatus={covidData}/>\n      </div>\n     \n    );\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}